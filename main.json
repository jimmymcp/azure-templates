{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "10016750658414122536"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies region of all resources."
      }
    },
    "appNameSuffix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "Suffix for function app, storage account, and key vault names."
      }
    },
    "storageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account SKU name."
      }
    }
  },
  "variables": {
    "$fxv#0": "using namespace System.Net\r\n\r\n# Input bindings are passed in via param block.\r\nparam($Request, $TriggerMetadata)\r\n\r\n$nouns = 'work with Business Central', 'contribution to scrum', 'attitude', 'teamwork', 'banter', 'work ethic', 'code', 'feedback'\r\n$adjectives = 'amazing', 'inspiring', 'great', 'funny', 'uplifting', 'invigorating', 'refreshing', 'fearless', 'creative', 'artistic', 'sincere'\r\n$sentences = 'Your {0} is {1}.', 'I admire your {0}. It''s {1}', 'I really appreciate your {1} {0}', '{1} {0}!', 'Your {1} {0} is a real boost to the team. Thanks!', 'We all value your {0}. It''s {1}!', 'How do you do it? Your {0} is {1}!'\r\n\r\n$body = ((Get-Random -InputObject $sentences) -f (Get-Random -InputObject $nouns), (Get-Random -InputObject $adjectives))\r\n\r\n# Associate values to output bindings by calling 'Push-OutputBinding'.\r\nPush-OutputBinding -Name Response -Value ([HttpResponseContext]@{\r\n    StatusCode = [HttpStatusCode]::OK\r\n    Body = $body\r\n})",
    "functionAppName": "[format('fn-{0}', parameters('appNameSuffix'))]",
    "appServicePlanName": "FunctionPlan",
    "appInsightsName": "AppInsights",
    "storageAccountName": "[format('fnstor{0}', replace(parameters('appNameSuffix'), '-', ''))]",
    "functionNameComputed": "ComplimentGenerator",
    "functionRuntime": "powershell"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageSku')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "sku": {
        "name": "Y1"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionRuntime')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            }
          ]
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('functionAppName'), variables('functionNameComputed'))]",
      "properties": {
        "config": {
          "disabled": false,
          "bindings": [
            {
              "name": "req",
              "type": "httpTrigger",
              "direction": "in",
              "authLevel": "function",
              "methods": [
                "get"
              ]
            },
            {
              "name": "$return",
              "type": "http",
              "direction": "out"
            }
          ]
        },
        "files": {
          "run.ps1": "[variables('$fxv#0')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2020-12-01').defaultHostName]"
    },
    "functionName": {
      "type": "string",
      "value": "[variables('functionNameComputed')]"
    }
  }
}